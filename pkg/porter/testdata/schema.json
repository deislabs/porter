{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "credential": {
      "description": "Credential defines a particular credential, and where it should be placed in the invocation image",
      "properties": {
        "description": {
          "description": "A user-friendly description of this credential",
          "type": "string"
        },
        "env": {
          "description": "The environment variable name, such as MY_VALUE, into which the credential value is stored",
          "type": "string"
        },
        "name": {
          "description": "The name of this credential",
          "type": "string"
        },
        "path": {
          "description": "The path inside of the invocation image where credentials will be mounted",
          "type": "string"
        },
        "required": {
          "default": false,
          "description": "Indicates whether this credential must be supplied. By default, credentials are optional.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "dependency": {
      "additionalProperties": false,
      "properties": {
        "parameters": {
          "type": "object"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "type": "object"
    },
    "output": {
      "description": "A value that is produced by running an invocation image",
      "properties": {
        "applyTo": {
          "description": "An optional exhaustive list of actions producing this output",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "definition": {
          "description": "The name of a definition that describes the schema structure of this output",
          "type": "string"
        },
        "description": {
          "description": "A user-friendly description of this output",
          "type": "string"
        },
        "name": {
          "description": "The name of this output",
          "type": "string"
        },
        "sensitive": {
          "default": false,
          "description": "Indicates where this output's value is sensitive and should not be logged.",
          "type": "boolean"
        }
      },
      "required": [
        "definition",
        "name"
      ],
      "type": "object"
    },
    "parameter": {
      "description": "A parameter that can be passed into the invocation image",
      "properties": {
        "definition": {
          "description": "The name of a definition that describes the schema structure of this parameter",
          "type": "string"
        },
        "description": {
          "description": "A user-friendly description of this output",
          "type": "string"
        },
        "destination": {
          "properties": {
            "env": {
              "description": "The environment variable name, such as MY_VALUE, in which the parameter value is stored",
              "type": "string"
            },
            "path": {
              "description": "The path inside of the invocation image where parameter data is mounted",
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "description": "The name of this parameter",
          "type": "string"
        },
        "sensitive": {
          "default": false,
          "description": "Indicates where this parameter's value is sensitive and should not be logged.",
          "type": "boolean"
        }
      },
      "required": [
        "definition",
        "name"
      ],
      "type": "object"
    }
  },
  "mixin.exec": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
      "installStep": {
        "additionalProperties": false,
        "properties": {
          "exec": {
            "additionalProperties": false,
            "properties": {
              "arguments": {
                "items": {
                  "minItems": 1,
                  "type": "string"
                },
                "type": "array"
              },
              "command": {
                "type": "string"
              },
              "description": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "description",
              "command"
            ],
            "type": "object"
          }
        },
        "required": [
          "exec"
        ],
        "type": "object"
      },
      "invokeStep": {
        "additionalProperties": false,
        "properties": {
          "exec": {
            "additionalProperties": false,
            "properties": {
              "arguments": {
                "items": {
                  "minItems": 1,
                  "type": "string"
                },
                "type": "array"
              },
              "command": {
                "type": "string"
              },
              "description": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "description",
              "command"
            ],
            "type": "object"
          }
        },
        "required": [
          "exec"
        ],
        "type": "object"
      },
      "uninstallStep": {
        "additionalProperties": false,
        "properties": {
          "exec": {
            "additionalProperties": false,
            "properties": {
              "arguments": {
                "items": {
                  "minItems": 1,
                  "type": "string"
                },
                "type": "array"
              },
              "command": {
                "type": "string"
              },
              "description": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "description",
              "command"
            ],
            "type": "object"
          }
        },
        "required": [
          "exec"
        ],
        "type": "object"
      },
      "upgradeStep": {
        "additionalProperties": false,
        "properties": {
          "exec": {
            "additionalProperties": false,
            "properties": {
              "arguments": {
                "items": {
                  "minItems": 1,
                  "type": "string"
                },
                "type": "array"
              },
              "command": {
                "type": "string"
              },
              "description": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "description",
              "command"
            ],
            "type": "object"
          }
        },
        "required": [
          "exec"
        ],
        "type": "object"
      }
    },
    "properties": {
      ".*": {
        "items": {
          "$ref": "#/mixin.exec/definitions/invokeStep"
        },
        "type": "array"
      },
      "install": {
        "items": {
          "$ref": "#/mixin.exec/definitions/installStep"
        },
        "type": "array"
      },
      "uninstall": {
        "items": {
          "$ref": "#/mixin.exec/definitions/uninstallStep"
        },
        "type": "array"
      },
      "upgrade": {
        "items": {
          "$ref": "#/mixin.exec/definitions/upgradeStep"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "properties": {
    ".*": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/mixin.exec/definitions/invokeStep"
          }
        ]
      },
      "type": "array"
    },
    "credentials": {
      "additionalProperties": {
        "$ref": "#/definitions/credential"
      },
      "description": "Credentials to be injected into the invocation image",
      "type": "object"
    },
    "dependencies": {
      "additionalProperties": {
        "$ref": "#/definitions/dependency"
      },
      "description": "Dependent bundles that must be executed with the bundle",
      "type": "object"
    },
    "description": {
      "description": "A description of the bundle",
      "type": "string"
    },
    "dockerfile": {
      "description": "The relative path to a Dockerfile to use as a template during porter build",
      "type": "string"
    },
    "install": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/mixin.exec/definitions/installStep"
          }
        ]
      },
      "type": "array"
    },
    "invocationImage": {
      "description": "The name of the container image to tag the invocation image with when it is built",
      "type": "string"
    },
    "mixins": {
      "items": {
        "enum": [
          "exec"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "name": {
      "description": "The name of the bundle",
      "type": "string"
    },
    "outputs": {
      "additionalProperties": {
        "$ref": "#/definitions/output"
      },
      "description": "Values that are produced by executing the invocation image",
      "type": "object"
    },
    "parameters": {
      "additionalProperties": {
        "$ref": "#/definitions/parameter"
      },
      "description": "Parameters that can be injected into the invocation image",
      "type": "object"
    },
    "tag": {
      "description": "The tag to use when the bundle is published to an OCI registry",
      "type": "string"
    },
    "uninstall": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/mixin.exec/definitions/uninstallStep"
          }
        ]
      },
      "type": "array"
    },
    "upgrade": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/mixin.exec/definitions/upgradeStep"
          }
        ]
      },
      "type": "array"
    },
    "version": {
      "description": "The version of the bundle, uses semver",
      "type": "string"
    }
  },
  "required": [
    "name",
    "version",
    "invocationImage",
    "mixins"
  ],
  "type": "object"
}
