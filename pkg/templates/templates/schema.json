{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "applyTo": {
      "description": "An optional exhaustive list of actions producing this output",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "credential": {
      "description": "Credential defines a particular credential, and where it should be placed in the invocation image",
      "properties": {
        "description": {
          "description": "A user-friendly description of this credential",
          "type": "string"
        },
        "env": {
          "description": "The environment variable name, such as MY_VALUE, into which the credential value is stored",
          "type": "string"
        },
        "name": {
          "description": "The name of this credential",
          "type": "string"
        },
        "path": {
          "description": "The path inside of the invocation image where credentials will be mounted",
          "type": "string"
        },
        "required": {
          "description": "Indicates whether this credential must be supplied. By default, credentials are optional.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "output": {
      "description": "A value that is produced by running an invocation image",
      "properties": {
        "applyTo": { "$ref": "#/definitions/applyTo"},
        "definition": {
          "description": "The name of a definition that describes the schema structure of this output",
          "type": "string"
        },
        "description": {
          "description": "A user-friendly description of this output",
          "type": "string"
        },
        "name": {
          "description": "The name of this output",
          "type": "string"
        },
        "sensitive": {
          "description": "Indicates where this output's value is sensitive and should not be logged.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "parameter": {
      "description": "A parameter that can be passed into the invocation image",
      "properties": {
        "applyTo": { "$ref": "#/definitions/applyTo"},
        "definition": {
          "description": "The name of a definition that describes the schema structure of this parameter",
          "type": "string"
        },
        "description": {
          "description": "A user-friendly description of this output",
          "type": "string"
        },
        "env": {
          "description": "The environment variable name, such as MY_VALUE, in which the parameter value is stored",
          "type": "string"
        },
        "path": {
          "description": "The path inside of the invocation image where parameter data is mounted",
          "type": "string"
        },
        "name": {
          "description": "The name of this parameter",
          "type": "string"
        },
        "sensitive": {
          "description": "Indicates where this parameter's value is sensitive and should not be logged.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "dependency": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        }
      },
      "required": ["tag"],
      "additionalProperties": false
    },
    "customAction": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the custom action"
        },
        "modifies": {
          "type": "boolean",
          "description": "Specifies that the action will modify resources in any way."
        },
        "stateless": {
          "type": "boolean",
          "description": "Specifies that the action does not act on a claim, and does not require credentials."
        }
      },
      "additionalProperties": false
    },
    "image": {
      "description": "An image represents an application image used in a bundle",
      "type": "object",
      "properties": {
        "description": {
          "description": "A user-friendly description of this image",
          "type": "string"
        }, 
        "imageType": {
          "description": "The type of this image, i.e. docker",
          "type": "string"
        }, 
        "repository": {
          "description": "The repository portion of the image reference, i.e. deislabs/coolapp",
          "type": "string"
        },
        "digest" :{ 
          "description": "The digest of the image, i.e. sha256:cafebabe...",
          "type": "string"
        },
        "size" : {
          "description": "The size of the image",
          "type": "integer"
        },
        "mediaType" : {
          "description": "The media type of the image",
          "type": "string"
        },
        "tag" : {
          "description": "The tag the image",
          "type": "string"
        },
        "labels": {
          "description": "Key/value pairs that used to specify identifying attributes of images",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "description", "imageType", "repository"
      ],
      "additionalProperties": false
    }
  },
  "properties": {
    "credentials": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/credential"
      },
      "description": "Credentials to be injected into the invocation image"
    },
    "description": {
      "type": "string",
      "description": "A description of the bundle"
    },
    "install": {
      "type": "array",
      "items": {
        "anyOf": []
      }
    },
    "tag": {
      "type": "string",
      "description": "The tag to use when the bundle is published to an OCI registry"
    },
    "mixins": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": []
      }
    },
    "name": {
      "type": "string",
      "description": "The name of the bundle"
    },
    "outputs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/output"
      },
      "description": "Values that are produced by executing the invocation image"
    },
    "parameters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/parameter"
      },
      "description": "Parameters that can be injected into the invocation image"
    },
    "dependencies": {
      "additionalProperties": {
        "$ref": "#/definitions/dependency"
      },
      "description": "Dependent bundles that must be executed with the bundle",
      "type": "object"
    },
    "required": {
      "description": "Required extensions for this bundle",
      "type": "array",
      "items": [
        {
          "type": ["string","object"],
          "properties": {
            "docker": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "privileged": {
                  "description": "Option to set the --privileged flag when running the Docker container",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "uniqueItems": true,
      "additionalItems": true
    },
    "uninstall": {
      "type": "array",
      "items": {
        "anyOf": []
      }
    },
    "upgrade": {
      "type": "array",
      "items": {
        "anyOf": []
      }
    },
    "version": {
      "type": "string",
      "description": "The version of the bundle, uses semver"
    },
    "dockerfile": {
      "type": "string",
      "description": "The relative path to a Dockerfile to use as a template during porter build"
    },
    "customActions": {
      "type": "object",
      "additionalProperties": {"$ref": "#/definitions/customAction"}
    },
    "images": {
      "type": "object",
      "additionalProperties": {"$ref": "#/definitions/image"}
    }
  },
  "additionalProperties": {
    "type": "array",
    "items": {
      "anyOf": []
    }
  },
  "required": ["name", "version", "mixins"]
}
